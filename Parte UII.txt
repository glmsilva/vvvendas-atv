Exporta Namespace DTO e BLL.

cria 5 botoões
labels e textbox

void BtnExibirClick(object sender, EventArgs e)

{
try{
        BLL.produtoBLL bll = new produtoBLL(); // instancia a classe produtoBLL do pacote BLL.
        gdvProdutos.DataSource = bll.selecionaProdutos(); // joga o metodo do objeto no datagridview. Irá retornar um datatable para a pagina de visualização da tabela.
     }catch (Exception ex){
         MessageBox.Show(" Erro : " + ex.Message.ToString());
   }
}



void BtnNovoClick(object sender, EventArgs e)

{

    Produto p = new Produto(); //instancia um nnovo objeto da classe produto do pacote DTO.

    p.Nome = (String) txtNome.Text; // joga na propriedade o txt correspondente. Não é preciso fazer o mesmo com ID pois é auto_increment

    p.Preco = Convert.ToDecimal(txtPreco.Text);

    try{

            BLL.produtoBLL bll = new produtoBLL();

            bll.novoProduto(p); // instancia um objeto BLL e em seguida chama o metodo correspondente jogando o atributo anterior(p) como parametro.

    }

    catch (Exception ex)
    {

        MessageBox.Show(" Erro : " + ex.Message.ToString());

    }

*************************************
void BtnAlterarClick(object sender, EventArgs e)

{

    Produto p = new Produto(); // instancia a classe

    p.ID = Convert.ToInt32(txtID.Text); // (int) Int.Parse

    p.Nome = (String) txtNome.Text;

    p.Preco = Convert.ToDecimal(txtPreco.Text); // (Float)(txtPreco)


try{

     BLL.produtoBLL bll = new produtoBLL();

      bll.alteraProduto(p);

}

catch (Exception ex)
{

    MessageBox.Show(" Erro : " + ex.Message.ToString());

}

}


void BtnExcluirClick(object sender, EventArgs e)

{
   Produto p = new Produto();
   p.ID = Convert.ToInt32(txtID.Text);
try{
        BLL.produtoBLL bll = new produtoBLL();
        bll.excluiProduto(p);
    }
   catch (Exception ex)
   {
     MessageBox.Show(" Erro : " + ex.Message.ToString());
}
}

 Primeiro criamos uma instância da classe Produto e definimos a propriedade ID atribuindo a ela o valor fornecido pelo usuário através das caixas de texto txtID.

A seguir criamos uma instância da classe ProdutoBLL()  no namespace BLL e em seguida usamos o método excluiProduto(p) para excluir um produto na base de dados identificado pelo parâmetro ID informado.

Finalmente temos o código do botão Procurar:

void BtnProcurarClick(object sender, EventArgs e)

{

    int id = Convert.ToInt32(txtID.Text);

    Produto p = new Produto();

try{

     BLL.produtoBLL bll = new produtoBLL();

     p = bll.listaProdutoPorID(id);

     txtNome.Text = p.Nome;

     txtPreco.Text = p.Preco.ToString();

}

catch (Exception ex)
{

    MessageBox.Show(" Erro : " + ex.Message.ToString());

}

}

 

Neste código obtemos o código do produto (ID) a partir da caixa de texto txtID.Text. A seguir criamos uma instância da classe Produto() e invocamos o método listaProdutoPorID usando o id obtido; por fim exibimos os dados do produto no formulário.

}